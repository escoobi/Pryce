Index: app/src/main/java/pryce/com/pryce/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package pryce.com.pryce;\n\nimport android.app.Activity;\nimport android.content.Intent;\nimport android.os.AsyncTask;\nimport android.support.v7.app.AppCompatActivity;\nimport android.os.Bundle;\n\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport com.google.firebase.database.DataSnapshot;\nimport com.google.firebase.database.DatabaseError;\nimport com.google.firebase.database.DatabaseReference;\nimport com.google.firebase.database.FirebaseDatabase;\nimport com.google.firebase.database.Query;\nimport com.google.firebase.database.ValueEventListener;\nimport com.google.zxing.integration.android.IntentIntegrator;\nimport com.google.zxing.integration.android.IntentResult;\n\nimport java.io.BufferedReader;\n\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.net.HttpURLConnection;\nimport java.net.MalformedURLException;\nimport java.net.URL;\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.Statement;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Scanner;\n\nimport okhttp3.OkHttpClient;\nimport okhttp3.Request;\nimport okhttp3.RequestBody;\nimport okhttp3.Response;\n\n\npublic class MainActivity extends AppCompatActivity {\n    Button btnScan;\n    String qrcode;\n\n    public static int qtditens = 0;\n    public static String razao = null;\n    public static String cnpj = null;\n    public static String cnpjSelect = null;\n    public static String logradouro = null;\n    public static String numero = null;\n    public static String bairro = null;\n    public static String cidade = null;\n    public static String uf = null;\n    public static String descr = null;\n    public static String cod = null;\n    public static String val = null;\n    public static String data = null;\n    public static String hora = null;\n    private DatabaseReference mDatabase;\n\n\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        btnScan = (Button) findViewById(R.id.btnQrCode);\n        final Activity act = this;\n        btnScan.setOnClickListener(new View.OnClickListener() {\n            public void onClick(View v) {\n                IntentIntegrator integrator = new IntentIntegrator(act);\n                integrator.setDesiredBarcodeFormats(IntentIntegrator.QR_CODE_TYPES);\n                integrator.setPrompt(\"Ler QRCode - NFc\");\n                integrator.setCameraId(0);\n                integrator.initiateScan();\n            }\n\n        });\n        if (savedInstanceState != null) {\n            qrcode = savedInstanceState.getString(\"cod\");\n\n        }\n        mDatabase = FirebaseDatabase.getInstance().getReference(\"Emitente\");\n\n\n    }\n\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n        IntentResult result = IntentIntegrator.parseActivityResult(requestCode, resultCode, data);\n        if (result != null) {\n            if (result.getContents() != null) {\n                //alert(result.getContents());\n                qrcode = result.getContents();\n                qrcode = qrcode.substring(qrcode.indexOf(\".\") + 1, qrcode.indexOf(\"&n\"));\n                qrcode = \"http://\" + qrcode + \"&nVersao=100&tpAmb=1\";\n            } else {\n                alert(\"Leitura cancelada.\");\n            }\n        } else {\n            super.onActivityResult(requestCode, resultCode, data);\n        }\n    }\n\n    public void onSaveInstanceState(Bundle savedInstanceState) {\n        savedInstanceState.putString(\"cod\", qrcode);\n        MTask task = new MTask();\n        task.execute(qrcode);\n        super.onSaveInstanceState(savedInstanceState);\n    }\n\n    private void alert(String msg) {\n        Toast.makeText(getApplicationContext(), msg, Toast.LENGTH_LONG).show();\n\n    }\n\n    private void carregarTxt(String texto) {\n        TextView text = (TextView) findViewById(R.id.txtCod);\n        text.setText(texto);\n\n    }\n\n    public void onResume() {\n        super.onResume();\n        carregarTxt(qrcode);\n\n    }\n\n    public class MTask extends AsyncTask<String, Long, String> {\n\n\n        @Override\n        protected String doInBackground(String... urls) {\n\n            URL url = null;\n            try {\n                url = new URL(qrcode);\n                if(qrcode.length() == 124) {\n                    obterEmitente(url);\n                    obterItens(url);\n                }\n                else{\n                    alert(\"Erro ao ler o QRCode.\");\n                }\n            } catch (MalformedURLException e) {\n                e.printStackTrace();\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n            return null;\n        }\n\n\n        protected void onPostExecute(String resultValue) {\n        }\n    }\n\n    public void obterEmitente(URL url) throws IOException {\n        StringBuilder numeros = new StringBuilder();\n        try {\n            BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream()));\n            String minhaLinha;\n            while ((minhaLinha = br.readLine()) != null) {\n                numeros.append(minhaLinha).append(\"\\n\");\n\n            }\n\n            Scanner scan = new Scanner(numeros.toString());\n            int nLinha = 0;\n            while (scan.hasNextLine()) {\n                String linha = scan.nextLine();\n                // Pega razão social\n                if (linha.contains(\"u20\")) {\n                    linha = linha.substring(30, linha.indexOf(\"</\"));\n                    razao = linha;\n                }\n                // Pega cnpj\n                if (nLinha == 147) {\n                    linha = linha.substring(6, linha.indexOf(\"</\"));\n                    cnpj = linha;\n                    cnpjSelect = linha;\n                }\n                // Pega logradouro\n                if (nLinha == 148) {\n                    linha = linha.substring(18, linha.indexOf(\",\"));\n                    logradouro = linha;\n                }\n                // Pega numero\n                if (nLinha == 149) {\n                    linha = linha.substring(2, linha.indexOf(\",\"));\n                    numero = linha;\n                }\n                // Pega bairro\n                if (nLinha == 151) {\n                    linha = linha.substring(2, linha.indexOf(\",\"));\n                    bairro = linha;\n                }\n                // Pega cidade\n                if (nLinha == 152) {\n                    linha = linha.substring(2, linha.indexOf(\",\"));\n                    cidade = linha;\n                }\n                // Pega uf\n                if (nLinha == 153) {\n                    linha = linha.substring(2, linha.indexOf(\"</\"));\n                    uf = linha;\n                }\n                // Pegar qtd itens\n                if (linha.contains(\"Qtd. total de itens:\")) {\n                    linha = linha.substring(59, linha.indexOf(\"</span>\"));\n                    qtditens = Integer.parseInt(linha);\n                }\n                // Pegar data emissão\n                if (linha.contains(\"Protocolo de Autoriza\")) {\n                    data = linha.substring(79, 89);\n                    data = data.replace(\"/\", \".\");\n                    hora = linha.substring(90, 98);\n                }\n                nLinha++;\n                if (razao != null && cnpj != null && logradouro != null && numero != null && bairro != null\n                        && cidade != null && uf != null) {\n                    //insertEmitente(razao.toUpperCase(), cnpjSelect, logradouro.toUpperCase(), numero, bairro.toUpperCase(), cidade.toUpperCase(), uf.toUpperCase());\n                   // insertEmitente();\n\n\n                    gravarEmitente(razao, cnpj, logradouro, bairro, numero,cidade, uf);\n\n\n                    razao = null;\n                    cnpj = null;\n                    logradouro = null;\n                    numero = null;\n                    bairro = null;\n                    cidade = null;\n                    uf = null;\n                }\n            }\n            scan.close();\n            br.close();\n        } catch (Exception localException) {\n        }\n    }\n\n    public static class Emitente {\n        String razao;\n        String cnpj;\n        String logradouro;\n        String bairro;\n        String numero;\n        String cidade;\n        String uf;\n\n\n\n        public Emitente(String razao, String cnpj, String logradouro, String bairro, String numero, String cidade, String uf) {\n            this.razao = razao;\n            this.cnpj = cnpj;\n            this.logradouro = logradouro;\n            this.bairro = bairro;\n            this.numero = numero;\n            this.cidade = cidade;\n            this.uf = uf;\n        }\n\n        public Emitente(){}\n\n        public Map<String, Object> toMap() {\n            HashMap<String, Object> result = new HashMap<>();\n            result.put(\"razao\", razao);\n            result.put(\"cnpj\", cnpj);\n            result.put(\"logradouro\", logradouro);\n            result.put(\"bairro\", bairro);\n            result.put(\"numero\", numero);\n            result.put(\"cidade\", cidade);\n            result.put(\"uf\", uf);\n\n            return result;\n        }\n\n    }\n\n\n   private void gravarEmitente (final String razao, final String cnpj, final String logradouro, final String bairro, final String numero, final String cidade, final String uf){\n\n        mDatabase.orderByChild(\"cnpj\").equalTo(cnpj).addListenerForSingleValueEvent(new ValueEventListener() {\n            @Override\n            public void onDataChange(DataSnapshot dataSnapshot) {\n                Emitente emitente = dataSnapshot.getValue(Emitente.class);\n\n                if (dataSnapshot.exists()) {\n\n                   // System.out.println(emitente.toMap().getClass());\n                }\n                else {\n                    emitente = new Emitente(razao, cnpj, logradouro, bairro, numero, cidade, uf);\n                    mDatabase.push().setValue(emitente);\n\n                }\n            }\n\n            @Override\n            public void onCancelled(DatabaseError databaseError) {\n\n            }\n        });\n   }\n\n    public void obterItens(URL caminho) throws IOException {\n        StringBuilder numeros = new StringBuilder();\n\n        try {\n            BufferedReader br = new BufferedReader(new InputStreamReader(caminho.openStream()));\n\n\n            String minhaLinhaDaXexeca;\n            while ((minhaLinhaDaXexeca = br.readLine()) != null) {\n                numeros.append(minhaLinhaDaXexeca).append(\"\\n\");\n\n            }\n\n\n            Scanner scan = new Scanner(numeros.toString());\n            int numLinha = 0;\n            int minhaLinha = 157;\n            int minhaLinhaValor = 159;\n            int qtdTotal = minhaLinha + (6 * qtditens);\n            while (scan.hasNextLine()) {\n                String linha = scan.nextLine();\n\n                for (int x = 0; x <= qtditens; x++) {\n                    if (qtdTotal != numLinha) {\n                        // Obter itens\n                        if (numLinha == minhaLinha) {\n\n                            descr = linha.substring(38, linha.indexOf(\"</span>\"));\n                            linha = linha.replaceAll(\" \", \"\");\n                            cod = linha.substring(linha.indexOf(\":\") + 1, linha.length());\n                            cod = cod.substring(0, cod.indexOf(\")\"));\n                            minhaLinha = minhaLinha + 6;\n\n                        }\n                        // Obter valor itens\n                        if (numLinha == minhaLinhaValor) {\n\n                            val = linha.substring(linha.indexOf(\"Vl. Unit.:</strong>&nbsp;\") + 25, linha.indexOf(\"</span></td>\"));\n                            val = val.replace(\",\", \".\");\n                            minhaLinhaValor = minhaLinhaValor + 6;\n\n                        }\n\n                    }\n\n                }\n                if (descr != null && cod != null && val != null) {\n                    insertProd(descr, cod, val);\n                    descr = null;\n                    cod = null;\n                    val = null;\n                }\n                numLinha++;\n\n            }\n            scan.close();\n            br.close();\n            insertProd(descr, cod, val);\n        } catch (Exception localException) {\n        }\n    }\n\n    public void insertProd(String desc, String cod, String val) {\n        try {\n            OkHttpClient client = new OkHttpClient();\n            URL url = new URL(\"http://spark.gruporondomotos.com.br/pryceInsertProd.php?desc=\" + desc + \"&cod=\" + cod + \"&val=\" + val + \"&dt=\" + data + \"&hr=\" + hora + \"&cnpj=\" + cnpjSelect);\n            Request request = new Request.Builder().url(url).build();\n            Response response = client.newCall(request).execute();\n\n\n\n        } catch (Exception e) {\n            e.printStackTrace();\n\n        }\n    }\n\n\n\n\n\n\n\n\n/*\n private DatabaseReference mDatabase = FirebaseDatabase.getInstance().getReference();\n            Query sql = mDatabase.child(\"Emitente\").orderByChild(\"cnpj\").equalTo(cnpj).limitToFirst(1);\n            sql.addListenerForSingleValueEvent(new ValueEventListener() {\n                @Override\n                public void onDataChange(DataSnapshot dataSnapshot) {\n\n                    if (dataSnapshot.exists()) {\n                      /*  emitente = dataSnapshot.getValue(Emitente.class);\n                        alert(emitente.razao);\n                    } else {\n                        mDatabase.child(\"Emitente\").child(mDatabase.child(\"Emitente\").push().getKey()).setValue(this);\n                    }\n                }\n\n                @Override\n                public void onCancelled(DatabaseError databaseError) {\n                    carregarTxt(\"deu ruim\");\n                }\n            });\n        }\n    }\n        */\n\n\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/pryce/com/pryce/MainActivity.java	(revision 6aecca556380426377cfc463a709a82ce04a7e64)
+++ app/src/main/java/pryce/com/pryce/MainActivity.java	(date 1533147207906)
@@ -382,38 +382,5 @@
 
         }
     }
-
-
-
-
-
-
-
-
-/*
- private DatabaseReference mDatabase = FirebaseDatabase.getInstance().getReference();
-            Query sql = mDatabase.child("Emitente").orderByChild("cnpj").equalTo(cnpj).limitToFirst(1);
-            sql.addListenerForSingleValueEvent(new ValueEventListener() {
-                @Override
-                public void onDataChange(DataSnapshot dataSnapshot) {
-
-                    if (dataSnapshot.exists()) {
-                      /*  emitente = dataSnapshot.getValue(Emitente.class);
-                        alert(emitente.razao);
-                    } else {
-                        mDatabase.child("Emitente").child(mDatabase.child("Emitente").push().getKey()).setValue(this);
-                    }
-                }
-
-                @Override
-                public void onCancelled(DatabaseError databaseError) {
-                    carregarTxt("deu ruim");
-                }
-            });
-        }
-    }
-        */
-
-
 }
 
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"NullableNotNullManager\">\n    <option name=\"myDefaultNullable\" value=\"android.support.annotation.Nullable\" />\n    <option name=\"myDefaultNotNull\" value=\"android.support.annotation.NonNull\" />\n    <option name=\"myNullables\">\n      <value>\n        <list size=\"5\">\n          <item index=\"0\" class=\"java.lang.String\" itemvalue=\"org.jetbrains.annotations.Nullable\" />\n          <item index=\"1\" class=\"java.lang.String\" itemvalue=\"javax.annotation.Nullable\" />\n          <item index=\"2\" class=\"java.lang.String\" itemvalue=\"javax.annotation.CheckForNull\" />\n          <item index=\"3\" class=\"java.lang.String\" itemvalue=\"edu.umd.cs.findbugs.annotations.Nullable\" />\n          <item index=\"4\" class=\"java.lang.String\" itemvalue=\"android.support.annotation.Nullable\" />\n        </list>\n      </value>\n    </option>\n    <option name=\"myNotNulls\">\n      <value>\n        <list size=\"4\">\n          <item index=\"0\" class=\"java.lang.String\" itemvalue=\"org.jetbrains.annotations.NotNull\" />\n          <item index=\"1\" class=\"java.lang.String\" itemvalue=\"javax.annotation.Nonnull\" />\n          <item index=\"2\" class=\"java.lang.String\" itemvalue=\"edu.umd.cs.findbugs.annotations.NonNull\" />\n          <item index=\"3\" class=\"java.lang.String\" itemvalue=\"android.support.annotation.NonNull\" />\n        </list>\n      </value>\n    </option>\n  </component>\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_7\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\n  </component>\n  <component name=\"ProjectType\">\n    <option name=\"id\" value=\"Android\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 6aecca556380426377cfc463a709a82ce04a7e64)
+++ .idea/misc.xml	(date 1533393328037)
@@ -25,7 +25,7 @@
       </value>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" project-jdk-name="JDK" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
